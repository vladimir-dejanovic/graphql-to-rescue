interface Human {
    name: String!
}

type Attendee implements Human {
    id: ID!
    name: String!
}

type Speaker implements  Human {
    id: ID!
    name: String!
    twitter: String
    talks: [Talk]
}

type Talk {
    id: ID!
    # this is comment for title
    title: String!
    description: String
}

union Any = Speaker | Talk

type Query {
    allTalks: [Talk]
    allSpeakers: [Speaker]
    allAttendees: [Attendee]
    allTalksForSpeaker(speakerId: Int) : [Talk]
    allAny: [Any]
    allHumans: [Human]
}

type Score {
    talk: String
    score: Int
}

type Subscription {
    scoreForTalk(talk: String): Score
}

schema {
    query: Query
    subscription: Subscription
}